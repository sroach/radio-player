package gy.roach.radio


import androidx.compose.ui.graphics.Color

val Seed = Color(0xFF68A500)


val primaryLight = Color(0xFF8F4C38)
val onPrimaryLight = Color(0xFFFFFFFF)
val primaryContainerLight = Color(0xFFFFDBD1)
val onPrimaryContainerLight = Color(0xFF723523)
val secondaryLight = Color(0xFF77574E)
val onSecondaryLight = Color(0xFFFFFFFF)
val secondaryContainerLight = Color(0xFFFFDBD1)
val onSecondaryContainerLight = Color(0xFF5D4037)
val tertiaryLight = Color(0xFF6C5D2F)
val onTertiaryLight = Color(0xFFFFFFFF)
val tertiaryContainerLight = Color(0xFFF5E1A7)
val onTertiaryContainerLight = Color(0xFF534619)
val errorLight = Color(0xFFBA1A1A)
val onErrorLight = Color(0xFFFFFFFF)
val errorContainerLight = Color(0xFFFFDAD6)
val onErrorContainerLight = Color(0xFF93000A)
val backgroundLight = Color(0xFFFFF8F6)
val onBackgroundLight = Color(0xFF231917)
val surfaceLight = Color(0xFFFFF8F6)
val onSurfaceLight = Color(0xFF231917)
val surfaceVariantLight = Color(0xFFF5DED8)
val onSurfaceVariantLight = Color(0xFF53433F)
val outlineLight = Color(0xFF85736E)
val outlineVariantLight = Color(0xFFD8C2BC)
val scrimLight = Color(0xFF000000)
val inverseSurfaceLight = Color(0xFF392E2B)
val inverseOnSurfaceLight = Color(0xFFFFEDE8)
val inversePrimaryLight = Color(0xFFFFB5A0)
val surfaceDimLight = Color(0xFFE8D6D2)
val surfaceBrightLight = Color(0xFFFFF8F6)
val surfaceContainerLowestLight = Color(0xFFFFFFFF)
val surfaceContainerLowLight = Color(0xFFFFF1ED)
val surfaceContainerLight = Color(0xFFFCEAE5)
val surfaceContainerHighLight = Color(0xFFF7E4E0)
val surfaceContainerHighestLight = Color(0xFFF1DFDA)

val primaryLightMediumContrast = Color(0xFF5D2514)
val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
val primaryContainerLightMediumContrast = Color(0xFFA15A45)
val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
val secondaryLightMediumContrast = Color(0xFF4B2F28)
val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
val secondaryContainerLightMediumContrast = Color(0xFF87655C)
val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
val tertiaryLightMediumContrast = Color(0xFF41350A)
val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
val tertiaryContainerLightMediumContrast = Color(0xFF7B6C3C)
val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
val errorLightMediumContrast = Color(0xFF740006)
val onErrorLightMediumContrast = Color(0xFFFFFFFF)
val errorContainerLightMediumContrast = Color(0xFFCF2C27)
val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
val backgroundLightMediumContrast = Color(0xFFFFF8F6)
val onBackgroundLightMediumContrast = Color(0xFF231917)
val surfaceLightMediumContrast = Color(0xFFFFF8F6)
val onSurfaceLightMediumContrast = Color(0xFF180F0D)
val surfaceVariantLightMediumContrast = Color(0xFFF5DED8)
val onSurfaceVariantLightMediumContrast = Color(0xFF41332F)
val outlineLightMediumContrast = Color(0xFF5F4F4A)
val outlineVariantLightMediumContrast = Color(0xFF7B6964)
val scrimLightMediumContrast = Color(0xFF000000)
val inverseSurfaceLightMediumContrast = Color(0xFF392E2B)
val inverseOnSurfaceLightMediumContrast = Color(0xFFFFEDE8)
val inversePrimaryLightMediumContrast = Color(0xFFFFB5A0)
val surfaceDimLightMediumContrast = Color(0xFFD4C3BE)
val surfaceBrightLightMediumContrast = Color(0xFFFFF8F6)
val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
val surfaceContainerLowLightMediumContrast = Color(0xFFFFF1ED)
val surfaceContainerLightMediumContrast = Color(0xFFF7E4E0)
val surfaceContainerHighLightMediumContrast = Color(0xFFEBD9D4)
val surfaceContainerHighestLightMediumContrast = Color(0xFFDFCEC9)

val primaryLightHighContrast = Color(0xFF501B0B)
val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
val primaryContainerLightHighContrast = Color(0xFF753725)
val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
val secondaryLightHighContrast = Color(0xFF3F261E)
val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
val secondaryContainerLightHighContrast = Color(0xFF60423A)
val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
val tertiaryLightHighContrast = Color(0xFF362B02)
val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
val tertiaryContainerLightHighContrast = Color(0xFF55481C)
val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
val errorLightHighContrast = Color(0xFF600004)
val onErrorLightHighContrast = Color(0xFFFFFFFF)
val errorContainerLightHighContrast = Color(0xFF98000A)
val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
val backgroundLightHighContrast = Color(0xFFFFF8F6)
val onBackgroundLightHighContrast = Color(0xFF231917)
val surfaceLightHighContrast = Color(0xFFFFF8F6)
val onSurfaceLightHighContrast = Color(0xFF000000)
val surfaceVariantLightHighContrast = Color(0xFFF5DED8)
val onSurfaceVariantLightHighContrast = Color(0xFF000000)
val outlineLightHighContrast = Color(0xFF372925)
val outlineVariantLightHighContrast = Color(0xFF554641)
val scrimLightHighContrast = Color(0xFF000000)
val inverseSurfaceLightHighContrast = Color(0xFF392E2B)
val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
val inversePrimaryLightHighContrast = Color(0xFFFFB5A0)
val surfaceDimLightHighContrast = Color(0xFFC6B5B1)
val surfaceBrightLightHighContrast = Color(0xFFFFF8F6)
val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
val surfaceContainerLowLightHighContrast = Color(0xFFFFEDE8)
val surfaceContainerLightHighContrast = Color(0xFFF1DFDA)
val surfaceContainerHighLightHighContrast = Color(0xFFE2D1CC)
val surfaceContainerHighestLightHighContrast = Color(0xFFD4C3BE)

val primaryDark = Color(0xFFFFB5A0)
val onPrimaryDark = Color(0xFF561F0F)
val primaryContainerDark = Color(0xFF723523)
val onPrimaryContainerDark = Color(0xFFFFDBD1)
val secondaryDark = Color(0xFFE7BDB2)
val onSecondaryDark = Color(0xFF442A22)
val secondaryContainerDark = Color(0xFF5D4037)
val onSecondaryContainerDark = Color(0xFFFFDBD1)
val tertiaryDark = Color(0xFFD8C58D)
val onTertiaryDark = Color(0xFF3B2F05)
val tertiaryContainerDark = Color(0xFF534619)
val onTertiaryContainerDark = Color(0xFFF5E1A7)
val errorDark = Color(0xFFFFB4AB)
val onErrorDark = Color(0xFF690005)
val errorContainerDark = Color(0xFF93000A)
val onErrorContainerDark = Color(0xFFFFDAD6)
val backgroundDark = Color(0xFF1A110F)
val onBackgroundDark = Color(0xFFF1DFDA)
val surfaceDark = Color(0xFF1A110F)
val onSurfaceDark = Color(0xFFF1DFDA)
val surfaceVariantDark = Color(0xFF53433F)
val onSurfaceVariantDark = Color(0xFFD8C2BC)
val outlineDark = Color(0xFFA08C87)
val outlineVariantDark = Color(0xFF53433F)
val scrimDark = Color(0xFF000000)
val inverseSurfaceDark = Color(0xFFF1DFDA)
val inverseOnSurfaceDark = Color(0xFF392E2B)
val inversePrimaryDark = Color(0xFF8F4C38)
val surfaceDimDark = Color(0xFF1A110F)
val surfaceBrightDark = Color(0xFF423734)
val surfaceContainerLowestDark = Color(0xFF140C0A)
val surfaceContainerLowDark = Color(0xFF231917)
val surfaceContainerDark = Color(0xFF271D1B)
val surfaceContainerHighDark = Color(0xFF322825)
val surfaceContainerHighestDark = Color(0xFF3D322F)

val primaryDarkMediumContrast = Color(0xFFFFD2C6)
val onPrimaryDarkMediumContrast = Color(0xFF481506)
val primaryContainerDarkMediumContrast = Color(0xFFCB7C65)
val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
val secondaryDarkMediumContrast = Color(0xFFFED3C7)
val onSecondaryDarkMediumContrast = Color(0xFF381F18)
val secondaryContainerDarkMediumContrast = Color(0xFFAE887E)
val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
val tertiaryDarkMediumContrast = Color(0xFFEFDBA1)
val onTertiaryDarkMediumContrast = Color(0xFF2F2500)
val tertiaryContainerDarkMediumContrast = Color(0xFFA0905C)
val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
val errorDarkMediumContrast = Color(0xFFFFD2CC)
val onErrorDarkMediumContrast = Color(0xFF540003)
val errorContainerDarkMediumContrast = Color(0xFFFF5449)
val onErrorContainerDarkMediumContrast = Color(0xFF000000)
val backgroundDarkMediumContrast = Color(0xFF1A110F)
val onBackgroundDarkMediumContrast = Color(0xFFF1DFDA)
val surfaceDarkMediumContrast = Color(0xFF1A110F)
val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
val surfaceVariantDarkMediumContrast = Color(0xFF53433F)
val onSurfaceVariantDarkMediumContrast = Color(0xFFEED7D1)
val outlineDarkMediumContrast = Color(0xFFC2ADA8)
val outlineVariantDarkMediumContrast = Color(0xFFA08C87)
val scrimDarkMediumContrast = Color(0xFF000000)
val inverseSurfaceDarkMediumContrast = Color(0xFFF1DFDA)
val inverseOnSurfaceDarkMediumContrast = Color(0xFF322825)
val inversePrimaryDarkMediumContrast = Color(0xFF743624)
val surfaceDimDarkMediumContrast = Color(0xFF1A110F)
val surfaceBrightDarkMediumContrast = Color(0xFF4E423F)
val surfaceContainerLowestDarkMediumContrast = Color(0xFF0D0604)
val surfaceContainerLowDarkMediumContrast = Color(0xFF251B19)
val surfaceContainerDarkMediumContrast = Color(0xFF302623)
val surfaceContainerHighDarkMediumContrast = Color(0xFF3B302D)
val surfaceContainerHighestDarkMediumContrast = Color(0xFF463B38)

val primaryDarkHighContrast = Color(0xFFFFECE7)
val onPrimaryDarkHighContrast = Color(0xFF000000)
val primaryContainerDarkHighContrast = Color(0xFFFFAF98)
val onPrimaryContainerDarkHighContrast = Color(0xFF1E0300)
val secondaryDarkHighContrast = Color(0xFFFFECE7)
val onSecondaryDarkHighContrast = Color(0xFF000000)
val secondaryContainerDarkHighContrast = Color(0xFFE3B9AE)
val onSecondaryContainerDarkHighContrast = Color(0xFF190603)
val tertiaryDarkHighContrast = Color(0xFFFFEFC4)
val onTertiaryDarkHighContrast = Color(0xFF000000)
val tertiaryContainerDarkHighContrast = Color(0xFFD4C289)
val onTertiaryContainerDarkHighContrast = Color(0xFF100B00)
val errorDarkHighContrast = Color(0xFFFFECE9)
val onErrorDarkHighContrast = Color(0xFF000000)
val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
val onErrorContainerDarkHighContrast = Color(0xFF220001)
val backgroundDarkHighContrast = Color(0xFF1A110F)
val onBackgroundDarkHighContrast = Color(0xFFF1DFDA)
val surfaceDarkHighContrast = Color(0xFF1A110F)
val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
val surfaceVariantDarkHighContrast = Color(0xFF53433F)
val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
val outlineDarkHighContrast = Color(0xFFFFECE7)
val outlineVariantDarkHighContrast = Color(0xFFD4BEB8)
val scrimDarkHighContrast = Color(0xFF000000)
val inverseSurfaceDarkHighContrast = Color(0xFFF1DFDA)
val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
val inversePrimaryDarkHighContrast = Color(0xFF743624)
val surfaceDimDarkHighContrast = Color(0xFF1A110F)
val surfaceBrightDarkHighContrast = Color(0xFF5A4D4A)
val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
val surfaceContainerLowDarkHighContrast = Color(0xFF271D1B)
val surfaceContainerDarkHighContrast = Color(0xFF392E2B)
val surfaceContainerHighDarkHighContrast = Color(0xFF443936)
val surfaceContainerHighestDarkHighContrast = Color(0xFF504441)

object IOSColors {
    // Light Theme Colors
    val LightPrimary = Color(0xFF007AFF) // iOS Blue
    val LightOnPrimary = Color(0xFFFFFFFF)
    val LightPrimaryContainer = Color(0xFFD1E3FF)
    val LightOnPrimaryContainer = Color(0xFF003060)

    val LightSecondary = Color(0xFF5AC8FA) // iOS Light Blue
    val LightOnSecondary = Color(0xFF003547)
    val LightSecondaryContainer = Color(0xFFCFE5FF)
    val LightOnSecondaryContainer = Color(0xFF001E30)

    val LightTertiary = Color(0xFF34C759) // iOS Green
    val LightOnTertiary = Color(0xFFFFFFFF)
    val LightTertiaryContainer = Color(0xFFDCF8E7)
    val LightOnTertiaryContainer = Color(0xFF002116)

    val LightError = Color(0xFFFF3B30) // iOS Red
    val LightErrorContainer = Color(0xFFFFDAD6)
    val LightOnError = Color(0xFFFFFFFF)
    val LightOnErrorContainer = Color(0xFF410002)

    val LightBackground = Color(0xFFF2F2F7) // iOS Light Background
    val LightOnBackground = Color(0xFF1C1C1E)
    val LightSurface = Color(0xFFFFFFFF)
    val LightOnSurface = Color(0xFF1C1C1E)
    val LightSurfaceVariant = Color(0xFFE5E5EA) // iOS Light Gray
    val LightOnSurfaceVariant = Color(0xFF44444A)

    val LightOutline = Color(0xFF8E8E93) // iOS Gray
    val LightOutlineVariant = Color(0xFFC5C5D0)
    val LightInverseSurface = Color(0xFF303030)
    val LightInverseOnSurface = Color(0xFFEFEFEF)
    val LightInversePrimary = Color(0xFF9FCAFF)
    val LightSurfaceTint = LightPrimary
    val LightScrim = Color(0xFF000000)

    // Dark Theme Colors
    val DarkPrimary = Color(0xFF0A84FF) // iOS Blue (Dark Mode)
    val DarkOnPrimary = Color(0xFFFFFFFF)
    val DarkPrimaryContainer = Color(0xFF004881)
    val DarkOnPrimaryContainer = Color(0xFFD1E3FF)

    val DarkSecondary = Color(0xFF64D2FF) // iOS Light Blue (Dark Mode)
    val DarkOnSecondary = Color(0xFF003547)
    val DarkSecondaryContainer = Color(0xFF004D66)
    val DarkOnSecondaryContainer = Color(0xFFCFE5FF)

    val DarkTertiary = Color(0xFF30D158) // iOS Green (Dark Mode)
    val DarkOnTertiary = Color(0xFFFFFFFF)
    val DarkTertiaryContainer = Color(0xFF003823)
    val DarkOnTertiaryContainer = Color(0xFFDCF8E7)

    val DarkError = Color(0xFFFF453A) // iOS Red (Dark Mode)
    val DarkErrorContainer = Color(0xFF8C1D18)
    val DarkOnError = Color(0xFFFFFFFF)
    val DarkOnErrorContainer = Color(0xFFFFDAD6)

    val DarkBackground = Color(0xFF1C1C1E) // iOS Dark Background
    val DarkOnBackground = Color(0xFFEFEFEF)
    val DarkSurface = Color(0xFF2C2C2E) // iOS Dark Gray
    val DarkOnSurface = Color(0xFFEFEFEF)
    val DarkSurfaceVariant = Color(0xFF3A3A3C) // iOS Dark Gray 2
    val DarkOnSurfaceVariant = Color(0xFFCACAD0)

    val DarkOutline = Color(0xFF8E8E93) // iOS Gray
    val DarkOutlineVariant = Color(0xFF48484A) // iOS Dark Gray 3
    val DarkInverseSurface = Color(0xFFEFEFEF)
    val DarkInverseOnSurface = Color(0xFF1C1C1E)
    val DarkInversePrimary = Color(0xFF0A84FF)
    val DarkSurfaceTint = DarkPrimary
    val DarkScrim = Color(0xFF000000)

    // cards

    val CardBackground = Color(0xFFFFFFFF)
    val CardBorder = Color(0xFFE5E5EA)
    val iosShadowColor = Color.Black.copy(alpha = 0.1f)


    val LightCardBackground = Color(0xFFFFFFFF)
    val LightCardBorder = Color(0xFFE5E5EA)
    val LightCardShadow = Color(0x33000000) // Black with 20% opacity

    val DarkCardBackground = Color(0xFF1C1C1E)
    val DarkCardBorder = Color(0xFF2C2C2E)
    val DarkCardShadow = Color(0x33000000) // Black with 20% opacity
}